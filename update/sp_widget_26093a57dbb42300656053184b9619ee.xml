<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope, $location, $rootScope, spUtil, $interpolate) {
	var c = this;
	var videoEl;
	
	c.update = function update(content) {
			c.data.sys_id = content;
			c.server.update();
	}


	var timerId = setInterval(function(){
		// wait until the video tag exists
		if(!(videoEl = document.querySelector("video"))) {
			return;
		}
		clearInterval(timerId);
		
		// reparent the video element so that it's inside our widget container
		var parentDiv = document.querySelector("a-scene").parentElement;
		parentDiv.appendChild(videoEl);
		document.getElementById("arjsDebugUIContainer").style.display = "none";
		
		/* instanciate instascan */
		var opts = {
			continuous: true,
			video: videoEl,
			mirror: false,
			captureImage: false,
			backgroundScan: true,
			refractoryPeriod: 5000,
			scanPeriod: 5
		};

		// instanciate Instascan
		var scanner = new Instascan.Scanner(opts);
		scanner.addListener('active', function (content) {
			console.log("**instascan is active");
		});
		scanner.addListener('inactive', function (content) {
			console.log("**instascan is inactive");
		});
		scanner.addListener('scan', function (content) {
			console.log("**instascan > " + content);
			c.update(content);
		});
		Instascan.Camera.getCameras().then(function (cameras) {
			if (cameras.length > 0) {
				scanner.start(cameras[0]);
				console.log("**instascan started");
			} else {
				console.error('**instascan No cameras found.');
			}
		});
		
		document.getElementById("marker").addEventListener("markerFound", function(e) {
			console.log("**arjs marker found > ");
			console.log(e);
		});

	}, 1000);
	
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.overlay {
  z-index: 1000;
  position: absolute;
  margin: 5px;
  padding: 10px;
  background:#7f7f7f;
  background:rgba(0,0,0,0.8);
  color: orange;
  
  a {
    color: orange;
  }
}

#info-panel {
  left: 20px;
  top: 60px;
}

#options-panel {
  display: none;
  right: 20px;
  top: 60px;
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>xr-viewer-widget</id>
        <internal>false</internal>
        <link/>
        <name>XR Viewer Widget</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() { 
	options.fields = options.fields || ["assigned_to","install_status","warranty_expiration","serial_number"];
	
	if (input) {
		$sp.log("** input > " + JSON.stringify(input));
		data.sys_id = input.sys_id;
	} else {
		data.sys_id = $sp.getParameter("sys_id");
	}
	$sp.log("** XR Viewer server / " + data.sys_id);
	$sp.log(options.fields.join(","));
	if (!data.sys_id) {
		$sp.log("** no sys_id was provided, stopping here");
		return;
	}
	
	data.table = $sp.getParameter("table") || "alm_asset"; // assume it's an asset
	var rec = new GlideRecord(data.table);
	if (rec.get(data.sys_id)) {
		if (data.table != rec.getRecordClassName()) {
			// actual class name is not the class that was passed
			data.table = rec.getRecordClassName();
			rec = new GlideRecord(data.table);
			rec.get(data.sys_id);
		}
		data.tableLabel = rec.getClassDisplayValue();
		data.displayValue = rec.getDisplayValue();
		$sp.log("** record found : " + data.tableLabel + " / " + data.displayValue);

		data.secondaryFields = [];
		data.concatenatedText = "";
		options.fields.forEach(function(field) {
			var f = $sp.getField(rec, field);
			data.secondaryFields.push(f);
			data.concatenatedText += f.display_value + "\r\n";
		});
		data.uri = gs.getProperty('glide.servlet.uri') + rec.getLink(false);
	} else {
		$sp.log("** record NOT found!");		
	}

})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-10-02 17:11:57</sys_created_on>
        <sys_id>26093a57dbb42300656053184b9619ee</sys_id>
        <sys_mod_count>151</sys_mod_count>
        <sys_name>XR Viewer Widget</sys_name>
        <sys_package display_value="OAB IR Asset Viewer POC" source="x_12167_oab_ir_ass">fd05fe93dbb42300656053184b961908</sys_package>
        <sys_policy/>
        <sys_scope display_value="OAB IR Asset Viewer POC">fd05fe93dbb42300656053184b961908</sys_scope>
        <sys_update_name>sp_widget_26093a57dbb42300656053184b9619ee</sys_update_name>
        <sys_updated_by>syvon</sys_updated_by>
        <sys_updated_on>2018-10-16 08:53:15</sys_updated_on>
        <template><![CDATA[<div id="options-panel" class="overlay">
</div>

<div id="info-panel" class="overlay" ng-if="data.displayValue">
	<h3>
    {{::c.data.displayValue}}
  </h3>  
  <ul>
    <li ng-repeat="field in c.data.secondaryFields">
    	{{field.label}}: {{field.display_value}}
  	</li>
  </ul> 
  <a href="{{::c.data.uri}}" target="_blank">open on platform</a>
</div>

<a-scene arjs='trackingMethod: best;sourceType: webcam;'>
  <a-assets>
    <a-mixin id="main-text"
             text="align: center; width: 0.6;">
    </a-mixin>
    <a-mixin id="sub-text"
             text="align: left; width: 0.5;">
    </a-mixin>
  </a-assets>
  <a-marker-camera id="marker" preset="hiro">
    <a-text value="{{::c.data.displayValue}}" mixin="main-text" position="0 0.1 -0.1" wrap-count="15"></a-text>
  </a-marker-camera>
</a-scene>
]]></template>
    </sp_widget>
</record_update>
